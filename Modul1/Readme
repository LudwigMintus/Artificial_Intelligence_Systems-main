# Отчёт по модулю №1
### Автор: Минтус E.A, P33121

## Введение
### Описание целей проекта и его значимости.
Цель исследования состоит в разработке и изучении трех ключевых компонентов в области искусственного интеллекта:базы знаний, онтологии и системы поддержки принятия решений на основе этих знаний. Результат работы - программа, которая рекомендует игру по введенным пользовательским данным.
- Значимость первой лабораторной работы определяется созданием базы знаний видеоигр с помощью Prolog. База знаний может использоваться для разработки системы поддержки принятия решения.
- Значимость второй лабораторной работы определяется созданием онтологии видеоигр с помощью Protege, а также переводом базы знаний (и самой возможностью перевода) в онтологическую форму в Protege.
- Значимость третьей лабораторной работы определяется разработкой программы, которая будет использовать базу знаний или онтологию для предоставления рекомендаций на основе введенных пользователем данных. (Knowledge-based support system)

## Анализ требований

### Определение основных требований к системе поддержки принятия решений.

- Точность. Получение подробной информации о конкретных видеоиграх, соответствующих пользовательским данным.
- Адаптивность и персонализация. Сбор данных пользователя и комплексный индивидуальный подбор.
- Эффективность и быстродействие. 
- Высокая надежность и простота. Простота в использовании, интуитивно понятное взаимодействие.
- Вариативность. Для разного ввода различный результат.

### Выявление требований к базе знаний и онтологии для представления знаний.

|                   Требование                   |             Онтология             |             БЗ             |
|:----------------------------------------------:|:---------------------------------:|:--------------------------:|
|            Поиск субъектов/объектов            |       classes, individuals        |         variables          |
|                Поиск предикатов                | data-/object- properties, classes |           rules            |
|                 Поиск по имени                 |                iri                | facts, anonymous variables |
|    Поиск открытых и скрытых связей по имени    |        Reasoner, DL Query         |        prolog query        |

Требования к базе знаний и онтологиям определяются необходимостью хранения корретной, структурированной информации для заданной предметной области. Необходимо продумать четкую иерархию сущностей/фактов.
Говоря о базе знаний, выделить четкие факты, предикаты, правила. Работая с онтологией, необходимо четко определить сущности, свойства.

## Изучение основных концепций и инструментов:

### Обзор основных концепций баз знаний и онтологий.
Базы знаний и онтологии - это два важных понятия в области искусственного интеллекта и компьютерных наук. 
Обе концепции используются для описания знаний и информации, но имеют разные подходы к этому.
- Базы знаний - это системы, которые хранят информацию и знания, которые могут быть использованы для решения задач.Они обычно содержат факты, правила, процедуры и другие элементы, необходимые для решения задач. Базы знаний используются в различных областях, таких как медицина, финансы, право и т.д.
- Онтологии - это формальные модели, которые описывают концептуальные категории и отношения между ними. Они используются для описания знаний в языке, который может быть понят людьми и машинами. Онтологии используются для создания более точных и эффективных систем поиска, классификации и анализа данных.

Основными принципами баз знаний являются:

- Декомпозиция знаний на факты, правила и процедуры.
- Построение моделей знаний на основе логических и математических принципов.
- Использование методов интеллектуального анализа данных для решения задач.

Основными принципами онтологий являются:

- Описание концептуальных категорий и отношений между ними.
- Использование формальных языков для описания знаний.
- Создание стандартных моделей для обмена и интеграции данных.

Обе концепции имеют свои преимущества и недостатки, и их выбор зависит от конкретных задач и потребностей. 
В целом, базы знаний используются для решения конкретных задач, а онтологии - для описания общих концептуальных категорий и создания стандартных моделей для обмена данными.

### Изучение Prolog и его возможностей для разработки систем искусственного интеллекта.

Prolog — это язык программирования общего назначения, который широко используется для разработки систем искусственного интеллекта. Он обладает мощными возможностями для создания эффективных алгоритмов и моделей машинного обучения.
Некоторые из наиболее полезных функций и возможностей Prolog:

1) Логический вывод. Prolog поддерживает логические операции, такие как AND, OR, NOT, EQUALS и LT, GT, LE, BETWEEN и IN, которые могут использоваться для выполнения различных типов логических операций. Это позволяет создавать эффективные модели логического вывода и обработки естественного языка.
2) Моделирование. Prolog предоставляет мощные инструменты для создания и манипулирования моделями машинного обучения. Он поддерживает различные типы моделей, включая линейную регрессию, деревья решений, нейронные сети и многое другое. Prolog также поддерживает возможность создания собственных моделей с помощью пакетов, таких как PL/SQL и Symbolic Expression Language (SEL).
3) Обработка естественного языка. Prolog поддерживает обработку естественного языка, такую как токенизация, лемматизация, стемминг и синтаксический анализ текста. Это позволяет создавать эффективные модели обработки естественного языка и анализировать текстовые данные.
4) Алгоритмическое программирование. Prolog поддерживает различные типы алгоритмического программирования, такие как задачи коммивояжера, сортировка слиянием и быстрая сортировка. Это позволяет создавать эффективные алгоритмы для решения задач, которые требуют сложных структур данных и вычислительных ресурсов.
5) Интеграция с другими языками программирования. Prolog поддерживает интеграцию с различными языками программирования, такими как Python, Java и C++. Это позволяет разработчикам интегрировать свои модели машинного обучения и алгоритмы в другие проекты и среды разработки.
В целом, Prolog предлагает мощный и гибкий инструмент для разработки систем искусственного интеллекта. Он обеспечивает высокую производительность, эффективность и удобство использования, а также поддерживает широкий спектр функциональности, которая может быть использована для создания эффективных моделей машинного обучения и обработки естественного языка.

### Ознакомление с инструментами и библиотеками, подходящими для работы с базами знаний и онтологиями на Prolog.
Существует множество инструментов и библиотек, которые могут помочь вам работать с базами знаний и онтологиями на языке Prolog. Вот несколько примеров:
1. PL/SQL: PL/SQL — это язык программирования, который широко используется для управления реляционными базами данных. Он предоставляет удобные средства для создания, изменения и удаления таблиц, а также для выполнения запросов к базе данных. Вы можете использовать PL/SQL для создания моделей баз данных, таких как деревья решений, нейронные сети и графы, а также для анализа и обработки данных.
2. SQLAlchemy: SQLAlchemy — это фреймворк для создания и управления базами данных на языке SQL. Он предоставляет удобный интерфейс для взаимодействия с реляционными базами данных, а также для создания и управления базами данных на языке SQL. SQLAlchemy также поддерживает работу с онтологиями, позволяя создавать и управлять базами знаний на языке SQL.
3. TensorFlow: TensorFlow — это библиотека машинного обучения, которая предоставляет мощные инструменты для создания и обучения нейронных сетей. Она поддерживает работу с базами знаний, позволяя создавать и управлять базами знаний на языке SQL. TensorFlow также поддерживает работу с онтологиями, позволяя создавать и управлять базами знаний на языке SQL.
4. OWL: OWL — это язык разметки, который используется для описания свойств и отношений между сущностями в базе знаний. Он предоставляет удобный интерфейс для создания и управления базами знаний на языке SQL. OWL также поддерживает работу с онтологиями, позволяя создавать и управлять базами знаний на языке SQL.
5. MongoDB: MongoDB — это популярная NoSQL база данных, которая предоставляет мощные инструменты для работы с данными. Она поддерживает работу с базами знаний, позволяя создавать и управлять базами знаний на языке SQL. MongoDB также поддерживает работу с онтологиями, позволяя создавать и управлять базами знаний на языке SQL.

## Реализация системы искусственного интеллекта на Prolog

Примеры:
- Машинное обучение
- Обработка естественного языка
- Экспертные системы
- Робототехника

### Создание правил и логики вывода для принятия решений на основе базы знаний и онтологии.

Полный процесс создания и описания правил доступен в отчетах к [лабораторной №1](https://github.com/LudwigMintus/Artificial_Intelligence_Systems-main/tree/main/Modul1/lab1) и [лабораторной №2](https://github.com/LudwigMintus/Artificial_Intelligence_Systems-main/tree/main/Modul1/lab2).

### Тестирование и отладка системы, обеспечение ее функциональности и эффективности.

- Тестирование и отладка продемонстрированы в соответствующих отчетах к [лабораторной №1](https://github.com/LudwigMintus/Artificial_Intelligence_Systems-main/tree/main/Modul1/lab1) и [лабораторной №2](https://github.com/LudwigMintus/Artificial_Intelligence_Systems-main/tree/main/Modul1/lab2).
- Тестирование и демонстрация всей системы доступны в отчете к [лабораторной №3](https://github.com/LudwigMintus/Artificial_Intelligence_Systems-main/tree/main/Modul1/lab3)

## Оценка и интерпретация результатов:

### Примеры запросов для БЗ и онтологии, сравнение разницы реализации.

Примеры запросов в БЗ и онтологию продемонстрированы в соответствующих отчетах к [лабораторной №1](https://github.com/LudwigMintus/Artificial_Intelligence_Systems-main/tree/main/Modul1/lab1) и [лабораторной №2](https://github.com/LudwigMintus/Artificial_Intelligence_Systems-main/tree/main/Modul1/lab2).

Сравним их:

|     Цель      |  Реализация в БЗ   |                   Реализация в онтологии                    |
|:-------------:|:------------------:|:-----------------------------------------------------------:|
| Наличие факта | Anonymous variable | Количество элементов (во многом зависит от открытости мира) |
|     Факт      |      Variable      |                    Количество элементов                     |
|     Связь     |        Rule        |                     Наличие properties                      |
|   Рекурсия    |      Итерации      |          Reasoner обеспечивает установление связей          |

### Оценка соответствия системы поставленным требованиям и достижению целей проекта.

Я доволен реализацией системы сполна, так как старалась разработать максимально комплексный предсказатель.
Демонстрация соответствия системы основным требованиям представлена в отчете к [лабораторной №3](https://github.com/LudwigMintus/Artificial_Intelligence_Systems-main/tree/main/Modul1/lab3).

### Интерпретация результатов и описание дальнейших возможностей развития и улучшения системы.

Полученные результаты можно интерпретировать как ИИ-помощника, действующего на основе онтологии Protege. Зона роста: интеграция в информационные системы, посвященные видеоиграм. Возможно, внедрение в магазинах видеоигр.

## Заключение:

### Описание преимуществ и потенциальных применений разработанной системы искусственного интеллекта на базе Prolog, баз знаний и онтологий.

На данный момент система готова к использованию. Преимущество - быстрота, надежность, индивидуальный подход к каждому пользователю. Потеницальное применение разработанной системы обусловлено спросом со стороны пользователя. Данную систему можно использовать в любой информационной системе, посвященной тематике видеоигр.
